[Pseudocode]
Question: Making Anagrams
Level: easy
Author: amititkgp
Solution: apexDev37


        1)  Check if s1 and s2 are anagrams.
            If both strings are anagrams, then return true
            Else return false.

        2)  Return 0 if the two strings given are both anagrams, 
            because no number of deletions are required - the strings 
            are anagrams.

        3)  Get the set of characters that exist in both the s1 and s2.
            (info) In terms of conceptual Venn diagrams, this would be
            represented an intersection of the elements (characters)
            shared between s1 and s2.

        4)  Truncate the "symmetric difference" of sets. This is the set
            of chars that are present in any one of the strings, but not
            present in both. If two strings have unequal length, truncate
            both to be of equal length.

            annotation: A Δ B = (A ∪ B) - (A ∩ B) 

        5)  Given a string, count and map the frequency of each unique 
            char in the string in a grouped and logical format.

                [Example]

                    given: str = 'anagram'
                    result: Any = [
                        'a' = frequency(3),
                        'n' = frequency(1),
                        'g' = frequency(1),
                        'r' = frequency(1),
                        'm' = frequency(1),
                    ] 
